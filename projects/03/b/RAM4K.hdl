// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // 1. Select the RAM512 to be updated
    DMux8Way(in=load ,sel=address[9..11] ,a=d0 ,b=d1 ,c=d2 ,d=d3 ,e=d4 ,f=d5 ,g=d6 ,h=d7);

    // 2. Update the RAM512's
    RAM512(in=in ,load=d0 ,address=address[0..8] ,out=ram0);
    RAM512(in=in ,load=d1 ,address=address[0..8] ,out=ram1);
    RAM512(in=in ,load=d2 ,address=address[0..8] ,out=ram2);
    RAM512(in=in ,load=d3 ,address=address[0..8] ,out=ram3);
    RAM512(in=in ,load=d4 ,address=address[0..8] ,out=ram4);
    RAM512(in=in ,load=d5 ,address=address[0..8] ,out=ram5);
    RAM512(in=in ,load=d6 ,address=address[0..8] ,out=ram6);
    RAM512(in=in ,load=d7 ,address=address[0..8] ,out=ram7);

    // 3. Output from the selected RAM5
    Mux8Way16(a=ram0 ,b=ram1 ,c=ram2 ,d=ram3 ,e=ram4 ,f=ram5 ,g=ram6 ,h=ram7 ,sel=address[9..11] ,out=out);

}
