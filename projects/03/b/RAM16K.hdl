// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // 1. Select the RAM4K to be updated
    DMux4Way(in=load ,sel=address[12..13] ,a=d0 ,b=d1 ,c=d2 ,d=d3);

    // 2. Update the RAM4K's
    RAM4K(in=in ,load=d0 ,address=address[0..11] ,out=ram0);
    RAM4K(in=in ,load=d1 ,address=address[0..11] ,out=ram1);
    RAM4K(in=in ,load=d2 ,address=address[0..11] ,out=ram2);
    RAM4K(in=in ,load=d3 ,address=address[0..11] ,out=ram3);

    // 3. Output from the selected RAM4K
    Mux4Way16(a=ram0 ,b=ram1 ,c=ram2 ,d=ram3 ,sel=address[12..13] ,out=out);

}
